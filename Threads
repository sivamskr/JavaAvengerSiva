/**
 * @author Sivakameswararao.M
 *
 */
public class MyThread extends Thread
{
	public void run()
	{
		System.out.println("r1 ");
		try {
        		Thread.sleep(500);
    		}
    		catch(InterruptedException ie) { }
       		System.out.println("r2 ");
  	}
	public static void main(String[] args)
	{
		MyThread t1=new MyThread();
		MyThread obj=new MyThread();
		obj.start();
		obj.isAlive();
		obj.isDaemon();
		obj.isInterrupted();
		try {
			obj.wait();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		obj.notify();
		obj.notifyAll();
		
		
		obj.start();
		Thread.yield();
		Thread.currentThread();
		System.out.println(obj.isAlive());
		System.out.println(obj.isAlive());
	}
}

ã€€
/**
 *
 * *********************************************************************************   
 *                    Static Methods                      Non-Static Methods
 * *********************************************************************************      
 *  Thread Class      Thread.sleep(millis);              obj.start();
 *                    Thread.yield();                    obj.run();
 *		              Thread.currentThread()             obj.join();
 *											             obj.isAlive()															
 *										                 obj.isDaemon()															
 *										                 obj.isInterrupted()
 *  *********************************************************************************   
 *  Object Class                                            
 *														   //Releases monitor			                                                     
 *		                                                   synchronized{
 *		                                                      obj.wait(); (inter- thread)
 *		                                                    }
 *		                                                   obj.notify();
 *		                                                   obj.notifyAll();
 * *********************************************************************************   
 */
